define("bitbucket/internal/feature/filebrowser/file-table/file-table","module exports @atlassian/aui jquery lodash bitbucket/util/navbuilder bitbucket/internal/feature/filebrowser/file-table-history/file-table-history bitbucket/internal/model/page-state bitbucket/internal/model/path bitbucket/internal/model/revision-reference bitbucket/internal/util/ajax bitbucket/internal/util/dom-event bitbucket/internal/util/events bitbucket/internal/util/history".split(" "),function(y,l,z,A,B,C,D,E,F,G,H,I,J,
K){function L(a,b,c,d){return(c=c&&c.getParent())?p(a,b,c,d):""}function M(){var a=window.location.href,b=q.default.state();return t(b&&b.prevUrl?b.prevUrl:document.referrer,a)}function r(a){return"string"!==typeof a?"/":a+("/"!==a.charAt(a.length-1)?"/":"")}function t(a,b){if(!a||!b||"string"!==typeof a||"string"!==typeof b)return null;a=a.split("?")[0];b=b.split("?")[0];if(a.length<b.length)return null;b=r(b);var c=m.default.currentRepo().build();var d=new RegExp(c.substring(0,c.lastIndexOf("/"))+
"/.*?/");b=r(c)+b.split(d)[1];a=r(c)+a.split(d)[1];(a=a.split(b)[1])&&u.default.includes(a,"/")&&(a=a.substring(0,a.indexOf("/")));return a?decodeURIComponent(a):null}function p(a,b,c,d){a=m.default.project(a).repo(b).browse().path(c.toJSON());return!d||("function"===typeof d.isDefault?d.isDefault():d.isDefault)?a.build():a.at(d.id||d.getId()).build()}function h(a,b,c){N.default.init();var d=this;this.currentPath=a;this.currentRevisionRef=b;this.maxDirectoryChildren=c;f.default.on("bitbucket.internal.history.changestate",
function(a){var b=a.state;!b||b.path===d.currentPath.toString()&&b.revisionRef.id===d.currentRevisionRef.getId()||(b.children||b.errors?d.dataReceived(b):(a=v.default.fromCommit({id:b.revisionRef.latestCommit}),d.requestData(e.default.getProject().getKey(),e.default.getRepository().getSlug(),new n.default(b.path),a,{popState:!0}).done(function(a){d.dataReceived(g.default.extend(b,a))}).fail(function(a,c,R,f){d.dataReceived(g.default.extend(b,f))})))});q.default.initialState({path:a.toString(),revisionRef:b.toJSON()});
f.default.on("bitbucket.internal.page.*.revisionRefChanged",function(a){d.currentRevisionRef.getId()!==a.getId()&&d.requestData(e.default.getProject().getKey(),e.default.getRepository().getSlug(),d.currentPath,a)});f.default.on("bitbucket.internal.page.*.urlChanged",function(a){d.requestDataAtUrl(a)})}function O(a){a.revisionRef=new v.default(a.revisionRef);a.path=new n.default(a.path);a&&a.children&&(a.parent=new n.default(a.parent),u.default.forEach(a.children.values,function(b){var c=b.path;c.parent&&
c.parent.length&&(b.collapsedParents=c.parent+"/");b.name=c.name;b.path=n.default.fromParentAndName(a.path,c.components);b.url=b.url||p(e.default.getProject().getKey(),e.default.getRepository().getSlug(),b.path,a.revisionRef)}))}function k(a){var b=this;this.fileTableSelector=a;this.$spinner=(0,g.default)("\x3cdiv class\x3d'spinner'/\x3e").hide().insertAfter(this.fileTableSelector);(0,g.default)(document).on("click",a+" .folder a",function(a){P.default.openInSameTab(a)&&(f.default.trigger("bitbucket.internal.feature.filetable.urlChanged",
b,(0,g.default)(this).attr("href")),a.preventDefault())});(0,g.default)(document).on("mouseenter",".submodule-name[title], .submodule-unlinked-commit[title]",function(){var a=(0,g.default)(this),b=a.tooltip({gravity:"nw",trigger:"manual"}).tipsy(!0);b.show();a.on("mouseenter",function(){return b.show()});a.on("mouseleave",function(){return b.hide()})});f.default.on("bitbucket.internal.feature.filetable.showSpinner",function(){(0,g.default)(".filebrowser-banner").empty();(0,g.default)(b.fileTableSelector).empty();
b.$spinner.show().spin("large")});f.default.on("bitbucket.internal.feature.filetable.dataReceived",function(a){b.update(a);f.default.trigger("bitbucket.internal.feature.filetable.hideSpinner",this)});f.default.on("bitbucket.internal.feature.filetable.hideSpinner",function(){b.$spinner.spinStop().hide()});this.focusInitialRow()}Object.defineProperty(l,"__esModule",{value:!0});var w=babelHelpers.interopRequireDefault(z),g=babelHelpers.interopRequireDefault(A),u=babelHelpers.interopRequireDefault(B),
m=babelHelpers.interopRequireDefault(C),N=babelHelpers.interopRequireDefault(D),e=babelHelpers.interopRequireDefault(E),n=babelHelpers.interopRequireDefault(F),v=babelHelpers.interopRequireDefault(G),x=babelHelpers.interopRequireDefault(H),P=babelHelpers.interopRequireDefault(I),f=babelHelpers.interopRequireDefault(J),q=babelHelpers.interopRequireDefault(K);h.prototype.reload=function(){this.requestData(e.default.getProject().getKey(),e.default.getRepository().getSlug(),this.currentPath,this.currentRevisionRef)};
h.prototype.dataReceived=function(a){O(a);a.path&&(this.currentPath=a.path);a.revisionRef&&this.currentRevisionRef.getId()!==a.revisionRef.getId()&&(this.currentRevisionRef=a.revisionRef,f.default.trigger("bitbucket.internal.feature.filetable.revisionRefChanged",this,a.revisionRef));f.default.trigger("bitbucket.internal.feature.filetable.dataReceived",this,a)};h.prototype.requestData=function(a,b,c,d,g){return this.requestDataAtUrl(p(a,b,c,d),d,g)};var Q=/(?:\/?([^?#]*))([?][^#]*)?/;h.prototype.parsePathUrl=
function(a){if(a&&0<a.length){var b=e.default.getProject().getKey(),c=e.default.getRepository().getSlug(),d=m.default.project(b).repo(c).browse().build();a=a.substring(a.indexOf(d)+d.length);if((a=a.match(Q))&&2<=a.length)return b={projectKey:b,repoSlug:c,path:decodeURIComponent(a[1])},3===a.length&&(b.query=a[2]),b}return{}};h.prototype.requestDataAtUrl=function(a,b,c){var d=this,e=d.parsePathUrl(a),h=new n.default(e.path),k=m.default.parseQuery(e.query?e.query:"").replaceParam("limit",this.maxDirectoryChildren).toString();
h=m.default.rest().project(e.projectKey).repo(e.repoSlug).browse().path(h).build()+k;c=c||{};var l=function(f){c.popState||(f=d.data=g.default.extend({},f,{revisionRef:(b||d.currentRevisionRef).toJSON(),projectKey:e.projectKey,repoSlug:e.repoSlug,path:e.path,prevUrl:window.location.href}),window.location.href.substring(window.location.href.indexOf(window.location.pathname))!==a?q.default.pushState(f,"",a):d.dataReceived(f))};f.default.trigger("bitbucket.internal.feature.filetable.showSpinner",this,
!0);return x.default.rest({url:h,statusCode:x.default.ignore404WithinRepository()}).done(function(a){l(a)}).fail(function(a,b,c,d){l(d)})};k.prototype.getSortedFiles=function(a){return a&&0!==a.length?a.sort(function(a,c){if("DIRECTORY"===a.type^"DIRECTORY"===c.type)return"DIRECTORY"===a.type?-1:1;a=(a.collapsedParents||"")+a.path.getName();c=(c.collapsedParents||"")+c.path.getName();var b=a.toLowerCase(),e=c.toLowerCase();return b!==e?b<e?-1:1:a===c?0:a<c?-1:1}):a};k.prototype.update=function(a){if(a&&
a.children){var b=a.children.values,c=!a.children.isLastPage;c||(b=this.getSortedFiles(b));var d=b.length;(0,g.default)(".filebrowser-banner").replaceWith(bitbucket.internal.feature.filebrowser.warnings({isTruncated:c,message:w.default.I18n.getText("bitbucket.web.file.browser.toomanyfiles",""+d)}));b=(0,g.default)(bitbucket.internal.feature.filebrowser.fileTable({files:b,parentDirectoryUrl:L(e.default.getProject().getKey(),e.default.getRepository().getSlug(),new n.default(a.path),a.revisionRef)}));
(0,g.default)(this.fileTableSelector).replaceWith(b);this.focusInitialRow()}else this.handleError(a);f.default.trigger("bitbucket.internal.feature.filetable.pathChanged",this,a.path.toJSON())};k.prototype.handleError=function(a){a&&!a.errors&&a.lines&&a.path&&a.revisionRef?window.location.href=m.default.currentRepo().browse().path(a.path).at(a.revisionRef.getId()).build():(a=a&&a.errors&&a.errors.length?a.errors[0].message:w.default.I18n.getText("bitbucket.web.ajax.unexpected.error"),a=bitbucket.internal.feature.filebrowser.fileTable({files:[],
isError:!0,errorMessage:a}),(0,g.default)(this.fileTableSelector).replaceWith((0,g.default)(a)))};k.prototype.getParentDirSelector=function(){return this.fileTableSelector+" tr.browse-up a"};k.prototype.focusInitialRow=function(){var a=(0,g.default)(this.fileTableSelector).find("tr.file-row").not(".browse-up"),b,c=M();c&&(b=a.filter(function(){return(0,g.default)(this).find("a").text()===c}));b&&b.length?b.addClass("focused-file").find("a").first().focus():a.first().length&&a.first().addClass("focused-file").find("a").first().focus()};
l.default={FileTableView:k,FileTable:h,getChildPathDifferenceBetweenUrls:t};y.exports=l["default"]});