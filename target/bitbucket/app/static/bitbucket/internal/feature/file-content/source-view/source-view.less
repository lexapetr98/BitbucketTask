@import "/static/global.less";
@import "/static/bitbucket/internal/feature/file-content/file-content-variables.less";

.source-view.text-view {
    .line {

        .line-number,
        .CodeMirror-linenumber {
            .box-sizing();
            .transition(~"border-color 0.2s, background-color 0.2s");
            background-color: @contentBackgroundColor;
            border: solid @lightDividerColor;
            border-width: 0 @codeLineBorderWidth 0 0;
            display: inline-block;
            font-family: monospace;
            line-height : @codeLineHeight;
            padding: 0 @halfSpacing;
            text-align: right;
            text-decoration: none;

            /* Target lines and hovers are only in source view and do not affect diff view */
            &:hover {
                background-color: #EEE;
                border-right-color: #326CA6;
            }

            &.target {
                background: @primaryHighlightColor;
                color: #FFF;
                font-weight: bold;
                text-decoration: none;
            }
        }
    }
    .line-number {
        width: @sourceLineNumberColumnWidth + @codeLineBorderWidth;
    }

    &.capacity-reached .CodeMirror-sizer {
        // ensures there is no white creeping out from underneath the grey background of the .capacity-reached-message.
        padding-bottom: 0;

    }

    .capacity-reached-message {
        line-height: inherit;
        background-color: @textContentBackgroundColor;
        // matches the padding on .CodeMirror-sizer that we've removed above.
        // Complements the margin on .aui-message - using margin-bottom there doesn't
        // extend the gray background on the capacity-message.
        padding-bottom: (@codeLineHeight + @codeLineBorderWidth) * 2;
        > .aui-message {
            margin: @baseSpacing @baseSpacing 0;
        }
    }


    &.editing {
        .CodeMirror {
            height: 100%!important; //override the inline style

            .CodeMirror-cursor {
                display: block;
            }

            .CodeMirror-gutter.line-number {
                width:0;
            }

            .CodeMirror-linenumber {
                box-sizing: content-box;
                color: @ak-color-B300;
                white-space: nowrap;
                // subtract the border and padding because this needs to be box-sizing: content-box
                // (because CodeMirror subtracts the padding from the offsetWidth)
                width: @sourceLineNumberColumnWidth - @codeLineBorderWidth - (2 * @halfSpacing);
                // need to redeclare padding/border so that CM can correctly calculate the gutter width
                padding: 0 @halfSpacing;
                border-right: @codeLineBorderWidth solid @lightDividerColor;
                font-family: monospace;
            }

            .CodeMirror-scroll {
                //revert the override in text-view.less
                overflow-y: scroll !important;
            }
        }
    }
}
