{namespace bitbucket.internal.feature.project}

/**
 * @param size either 'xsmall', 'small', 'medium', 'large', 'xlarge', 'xxlarge' or 'xxxlarge'
 * @param? project
 * @param? tooltip
 * @param? imageUrl overrides url generated by avatarUrl()
 * @param? extraClasses
 * @param? extraAttributes
 * @param? imageClasses
 * @param? badgeContent extra HTML for badge
 * @param? hideBadge if true, the badge is hidden (but html is still present in the dom)
 * @param? tagName default is 'div'
 * @param? standardAvatar if true, forces the standard avatar even if its a project.
 */
{template .avatar}
    {call aui.avatar.avatar}
        {param tagName : $tagName /}
        {param size: $size /}
        {param avatarImageUrl: $imageUrl ? $imageUrl :
                                $project ? avatarUrl($project, $size) :
                                '' /}
        {param accessibilityText: $project ? $project.name : '' /}
        {param title: $tooltip /}
        {param badgeContent: $badgeContent /}
        {param isProject: (not $standardAvatar) and (not $project.owner) /}
        {param imageClasses: $imageClasses /}
        {param extraClasses: ($hideBadge ? ' badge-hidden' : '') + ($extraClasses ? ' ' + $extraClasses : '' ) /}
        {param extraAttributes: $extraAttributes /}
    {/call}
{/template}
