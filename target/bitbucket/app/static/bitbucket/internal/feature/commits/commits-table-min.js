define("bitbucket/internal/feature/commits/commits-table","module exports @atlassian/aui jquery lodash bitbucket/util/navbuilder bitbucket/internal/feature/commits/commit-message-enricher bitbucket/internal/util/events bitbucket/internal/widget/paged-table/paged-table".split(" "),function(q,g,c,r,t,u,v,w,x){function b(a,d){this.getCommitsUrlBuilder=a;a={target:"#commits-table",ajaxDataType:"html",tableMessageClass:"commits-table-message",allFetchedMessageHtml:'\x3cp class\x3d"no-more-results"\x3e'+
(0,c.escapeHtml)(c.I18n.getText("bitbucket.web.commit.allcommitsfetched"))+"\x3c/p\x3e",noneFoundMessageHtml:'\x3ch3 class\x3d"no-results entity-empty"\x3e'+(0,c.escapeHtml)(c.I18n.getText("bitbucket.web.commit.nocommitsfetched"))+"\x3c/h3\x3e",paginationContext:"commits-table",focusFirstRow:!1};d=e.default.extend({},a,d);f.default.call(this,d);this.$spinner.addClass("commits-table-spinner");this._destroyables=[]}function n(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"";return a+
" .commit-row.focused, "+a+".show-merges .commit-row, "+a+":not(.show-merges) .commit-row:not(.merge)"}Object.defineProperty(g,"__esModule",{value:!0});var e=babelHelpers.interopRequireDefault(r),p=babelHelpers.interopRequireDefault(t),y=babelHelpers.interopRequireDefault(u),z=babelHelpers.interopRequireDefault(v),h=babelHelpers.interopRequireDefault(w),f=babelHelpers.interopRequireDefault(x);e.default.extend(b.prototype,f.default.prototype);b.prototype.buildUrl=function(a,d){return this.getCommitsUrlBuilder().withParams({start:a,
limit:d,contents:""}).build()};b.prototype.onDataLoaded=function(a,d,c){"string"===typeof c&&(c=this.createDataFromJQuery(a,d,(0,e.default)(c)));return f.default.prototype.onDataLoaded.call(this,a,d,c)};b.prototype.onFirstDataLoaded=function(){var a=this;f.default.prototype.onFirstDataLoaded.call(this);p.default.defer(function(){a.$table.find("tr.commit-row").each(a.enrichCommitMessage);h.default.trigger("bitbucket.internal.widget.commitsTable.serverContentAdded",a)})};b.prototype.attachNewContent=
function(a,d){f.default.prototype.attachNewContent.call(this,a,d);a.values.each(this.enrichCommitMessage);h.default.trigger("bitbucket.internal.widget.commitsTable.contentAdded",this,a)};b.prototype.handleNewRows=function(a,d){this.$table.show().children("tbody")["html"!==d?d:"append"](a.values)};b.prototype.focusInitialRow=function(){if(this.options.focusFirstRow){var a=(0,e.default)(n(this.$table.selector))[0]||this.$table.find("tbody .commit-row:first")[0];(0,e.default)(a).addClass(this.options.focusOptions.focusedClass).find("td.commit a").first().focus()}};
b.prototype.bindKeyboardShortcuts=function(){var a=this,d=this,b=this.$table.selector,k=!1,l={focusedClass:this.options.focusOptions.focusedClass,wrapAround:!1,escToCancel:!1},g=b+" .commit-row.focused",m=n(b);this._onDisableOpenItemHandler=function(){k=!0};this._onEnableOpenItemHandler=function(){k=!1};this.bindMoveToNextHandler=function(a){(this.moveToNextItem?this:(0,c.whenIType)(a)).moveToNextItem(m,l).execute(function(){(0,e.default)(m).last().hasClass(l.focusedClass)&&window.scrollTo(0,document.documentElement.scrollHeight)})};
this.bindMoveToPreviousHandler=function(a){(this.moveToPrevItem?this:(0,c.whenIType)(a)).moveToPrevItem(m,l)};this.bindOpenItemHandler=function(a){(this.execute?this:(0,c.whenIType)(a)).execute(function(){if(!k){var a=(0,e.default)(g);a.length&&(window.location.href=a.find("td.commit a").attr("href"))}})};this.bindToggleMergesHandler=function(a){var b;(this.execute?this:(0,c.whenIType)(a)).execute(function(){d.$table.toggleClass("show-merges");var a=d.$table.hasClass("show-merges")?c.I18n.getText("bitbucket.web.commit.filter-all"):
c.I18n.getText("bitbucket.web.commit.filter-hide-merge");b&&b.close();b=(0,c.flag)({type:"info",title:a,close:"auto"})})};this.$table.on("focus",".commit-row",function(b){h.default.trigger("bitbucket.internal.widget.commitsTable.rowFocused",a,b.currentTarget);a.$table.find(".focused").removeClass("focused");(0,e.default)(b.currentTarget).addClass("focused")});this._destroyables.push(h.default.chain().on("bitbucket.internal.keyboard.shortcuts.requestMoveToNextHandler",this.bindMoveToNextHandler).on("bitbucket.internal.keyboard.shortcuts.requestMoveToPreviousHandler",
this.bindMoveToPreviousHandler).on("bitbucket.internal.keyboard.shortcuts.requestOpenItemHandler",this.bindOpenItemHandler).on("bitbucket.internal.keyboard.shortcuts.requestToggleMergesHandler",this.bindToggleMergesHandler).on("bitbucket.internal.keyboard.shortcuts.disableOpenItemHandler",this._onDisableOpenItemHandler).on("bitbucket.internal.keyboard.shortcuts.enableOpenItemHandler",this._onEnableOpenItemHandler));this._destroyables.push(f.default.prototype.initShortcuts.call(this))};b.prototype.enrichCommitMessage=
function(a,b){a=(0,e.default)(b);var c=a.data("commit-json"),d=y.default.currentRepo().commit(c.id).build();a.find(".message-subject, .message-body").each(function(a,b){var f=(0,e.default)(b);z.default.process(f.text(),c,function(a){return a.trim().length?bitbucket.internal.feature.commits.link({commit:c,commitUrl:d,shortMessage:a.trim(),leadingSpaces:a.match(/^\s*/)[0],trailingSpaces:a.match(/\s*$/)[0]}):a}).then(function(a){f.html(a)})})};b.prototype.destroy=function(){f.default.prototype.destroy.call(this);
p.default.invokeMap(this._destroyables,"destroy")};g.default=b;q.exports=g["default"]});