define("bitbucket/internal/feature/repository/base-repository-selector/base-repository-selector","module exports @atlassian/aui jquery lodash bitbucket/internal/model/repository bitbucket/internal/util/events bitbucket/internal/widget/searchable-selector/searchable-selector".split(" "),function(k,f,g,c,l,m,n,p){function b(a,b){return this.init.apply(this,arguments)}Object.defineProperty(f,"__esModule",{value:!0});g=babelHelpers.interopRequireDefault(g);var e=babelHelpers.interopRequireDefault(c),
h=babelHelpers.interopRequireDefault(l),d=babelHelpers.interopRequireDefault(m),q=babelHelpers.interopRequireDefault(n);c=babelHelpers.interopRequireDefault(p);e.default.extend(b.prototype,c.default.prototype);b.constructDataPageFromPreloadArray=c.default.constructDataPageFromPreloadArray;b.prototype.defaults=e.default.extend(!0,{},c.default.prototype.defaults,{searchable:!1,extraClasses:"base-repository-selector",resultsTemplate:bitbucket.internal.feature.repository.baseRepositorySelectorResults,
triggerContentTemplate:bitbucket.internal.feature.repository.baseRepositorySelectorTriggerContent,searchPlaceholder:g.default.I18n.getText("bitbucket.web.repository.selector.search.placeholder"),namespace:"base-repository-selector",itemSelectedEvent:"bitbucket.internal.feature.repository.repositorySelector.repositoryChanged",itemDataKey:"repository",paginationContext:"base-repository-selector"});b.prototype._getItemFromTrigger=function(){var a=this.$trigger.find(".repository");return new d.default(e.default.extend({},
this._buildObjectFromElementDataAttributes(a),{name:a.children(".name").text()||void 0}))};b.prototype.setSelectedItem=function(a){a instanceof d.default&&!a.isEqual(this._selectedItem)&&this._itemSelected(a)};b.prototype._itemSelected=function(a){if(a instanceof d.default){var b=a;a=a.toJSON()}else a=h.default.pick(a,h.default.keys(d.default.prototype.namedAttributes)),b=new d.default(a);this._selectedItem=b;this._getOptionVal("field")&&(0,e.default)(this._getOptionVal("field")).val(a.id);var c=
b.getProject().getName()+" / "+b.getName();this.updateTrigger({repository:a},c);q.default.trigger(this._getOptionVal("itemSelectedEvent"),this,b,this._getOptionVal("context"))};f.default=b;k.exports=f["default"]});