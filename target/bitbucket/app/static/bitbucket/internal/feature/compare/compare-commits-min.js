define("bitbucket/internal/feature/compare/compare-commits","module exports @atlassian/aui jquery lodash bitbucket/util/navbuilder bitbucket/internal/feature/commits/commits-table bitbucket/internal/util/bacon".split(" "),function(e,b,f,k,l,m,n,p){function q(a){var c=a.getSourceRepository();return r.default.project(c.getProject()).repo(c).commits().withParams({until:a.getSourceBranch().getLatestCommit(),since:a.getTargetBranch().getLatestCommit(),secondaryRepositoryId:a.getTargetRepository().getId()})}
Object.defineProperty(b,"__esModule",{value:!0});b.default=function(a){var c=t.default.events("bitbucket.internal.widget.keyboard-shortcuts.register-contexts");return function(b,e){var g=(0,u.default)(bitbucket.internal.feature.compare.commits({repository:b.getSourceRepository().toJSON(),commitsTableWebSections:a}));e.append(g);var d=new v.default(w.default.partial(q,b),{target:g,webSections:a,allFetchedMessageHtml:h.default.I18n.getText("bitbucket.web.repository.compare.allcommitsfetched"),noneFoundMessageHtml:h.default.I18n.getText("bitbucket.web.repository.compare.nocommitsfetched")});
d.init({suspended:!0}).done(function(){d.resume()});var f=c.onValue(function(a){a.enableContext("commits")});d.bindKeyboardShortcuts();return function(){f();d.destroy()}}};var h=babelHelpers.interopRequireDefault(f),u=babelHelpers.interopRequireDefault(k),w=babelHelpers.interopRequireDefault(l),r=babelHelpers.interopRequireDefault(m),v=babelHelpers.interopRequireDefault(n),t=babelHelpers.interopRequireDefault(p);e.exports=b["default"]});