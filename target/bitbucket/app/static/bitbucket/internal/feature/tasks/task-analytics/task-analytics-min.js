define("bitbucket/internal/feature/tasks/task-analytics/task-analytics","module exports jquery lodash bitbucket/util/events bitbucket/util/state bitbucket/internal/feature/tasks/model/task bitbucket/internal/feature/tasks/model/task-collection bitbucket/internal/feature/tasks/model/task-state bitbucket/internal/util/analytics".split(" "),function(w,n,p,x,y,z,A,B,C,D){function e(a,b){E.default.add("pullRequest.task."+a,b)}function f(a,b){if(a){var c=a.text.length;var g=a.id;a=a.createdDate;a=Date.now()-
a;c={"task.text.length":c,"task.id":g,"task.time.since.created":a}}g=(0,k.default)("#task-list-dialog");g.length&&"false"===g.attr("aria-hidden")?g=l.TASK_LIST:(g=(0,k.default)(".active-tab[data-module-key]").attr("data-module-key"),g=q.default.endsWith(g,"diff")?l.DIFF:q.default.endsWith(g,"commits")?l.COMMITS:l.ACTIVITY_STREAM);a=d.default.getPullRequest().id;var e=d.default.getRepository().id;var f=m()?"author":r()?"reviewer":F()?"participant":"other";return k.default.extend({},{source:g,"pullRequest.id":a,
"repository.id":e,userRole:f},b,c)}function G(a){e("resolved."+h.taskTransitionAction(a.task),f(a.task))}function H(a){e("reopened."+h.taskTransitionAction(a.task),f(a.task))}function I(a){t=Date.now();var b="keyboard-shortcut";a&&a.sourceEl&&(b="link");e("list.opened."+h.genericAction(),f(null,{"source.secondary":b}))}function J(){var a="list.closed."+h.genericAction();var b=t;b=Date.now()-b;e(a,f(null,{age:b}))}function K(a){e("list.expandTask."+h.genericAction(),f(a.model.toJSON()))}function L(a){var b=
"gotoTask";"diff"===a.location&&(b="gotoFile");e("list."+b+"."+h.genericAction(),f(a.task))}function M(a){var b=a.toJSON();if(b.anchor.type===u.default.Anchor.COMMENT){if(b.anchor.type!==u.default.Anchor.COMMENT)var c=null;else c=(0,k.default)('.comment[data-id\x3d"'+b.anchor.id+'"]'),c={text:c.find("\x3e .content \x3e .message").text(),author:c.find("span[data-username]").attr("data-username")};c={"is.comment.owner":c.author===d.default.getCurrentUser().name,"duplicates.comment":b.text.trim()===
c.text.trim()}}e("created."+(a.prefilled?"prefilled.":"")+h.genericAction(),f(b,c))}function N(a){if(!a.isNew()){var b=a.getState()===O.default.RESOLVED;(m()||d.default.getCurrentUser().isAdmin||v(a.toJSON()))&&!b&&a.attributes.text!==a._previousAttributes.text&&e("edited."+h.taskAction(a.toJSON(),!0),f(a.toJSON()))}}function P(a){a.isNew()||e("deleted."+h.taskAction(a.toJSON(),!0),f(a.toJSON()))}function m(){return d.default.getCurrentUser().id===d.default.getPullRequest().author.user.id}function r(){var a=
d.default.getPullRequest().reviewers;return a.length&&a.some(function(a){return a.user.id===d.default.getCurrentUser().id})}function F(){var a=d.default.getPullRequest().participants;return a.length&&a.some(function(a){return a.user.id===d.default.getCurrentUser().id})}function v(a){return d.default.getCurrentUser().name===a.author.name}Object.defineProperty(n,"__esModule",{value:!0});var k=babelHelpers.interopRequireDefault(p),q=babelHelpers.interopRequireDefault(x),Q=babelHelpers.interopRequireDefault(y),
d=babelHelpers.interopRequireDefault(z),u=babelHelpers.interopRequireDefault(A);p=babelHelpers.interopRequireDefault(B);var O=babelHelpers.interopRequireDefault(C),E=babelHelpers.interopRequireDefault(D),l={ACTIVITY_STREAM:"activity-stream",COMMITS:"commits-tab",DIFF:"diff-tab",TASK_LIST:"task-list"},R=p.default.getCollection(),t,h={Type:{other:"byOther",PRAuthor:"byPRAuthor",taskAuthor:"byTaskAuthor",admin:"byAdmin",reviewer:"byReviewer"},genericAction:function(){var a=this.Type.other;m()?a=this.Type.PRAuthor:
r()&&(a=this.Type.reviewer);return a},taskAction:function(a,b){var c=this.Type.other;b=!!b;d.default.getCurrentUser().isAdmin&&b&&(c=this.Type.admin);m()?c=this.Type.PRAuthor:v(a)&&(c=this.Type.taskAuthor);return c},taskTransitionAction:function(a){return this.taskAction(a,!1)}};n.default={init:function(){Q.default.chain().on("bitbucket.internal.feature.pull-request-tasks.resolved",G).on("bitbucket.internal.feature.pull-request-tasks.reopened",H).on("bitbucket.internal.feature.tasks.list.opened",
I).on("bitbucket.internal.feature.tasks.list.closed",J).on("bitbucket.internal.feature.tasks.list.expand",K).on("bitbucket.internal.feature.tasks.visit-task",L);R.on("change:id",M).on("change:text",N).on("destroy",P)}};w.exports=n["default"]});