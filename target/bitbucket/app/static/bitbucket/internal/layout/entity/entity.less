@import "/static/global.less";

@aui-nav-link-padding: 5px;
@action-button-width: 39px;

#content {
    > .aui-tabs > ul.tabs-menu li.menu-item.active-tab strong {
        cursor: inherit; /* active tab is still clickable on entity pages */
    }
}

.page-panel-content-header {
    margin-top: 0;
    padding-bottom: @baseSpacing;
}

.sidebar-settings-group {
    // we're adding an empty nav heading above the settings button so that we get the sidebar group dividers,
    // but we don't want the padding which is normally above the nav heading text
    // @aui-override until https://ecosystem.atlassian.net/browse/AUI-2809 is fixed
    .aui-nav-heading {
        padding-top: 0;
    }
}

.actions-trigger {
    .aui-sidebar & {
        opacity: 0;
        height: 100%;
        position: absolute;
        right: 0;
        top: 0;

        &:hover,
        &.active { // The button shows its focus state well enough without the native outline.
            outline: 0;
        }
    }

    // In some situations we want the actions-trigger completely out of the picture...
    .aui-sidebar-submenu-dialog &,
    .aui-sidebar[aria-expanded="false"] & {
        display: none;
    }

    // ...but in an expanded sidebar, we want it visually hidden, but still in tab order and focusable.
    // So we give it opacity 0 and then switch to 1 when the parent is hovered, or it has focus/is active.
    .aui-sidebar[aria-expanded="true"] li:hover &,
    .aui-sidebar[aria-expanded="true"] li &:focus,
    .aui-sidebar[aria-expanded="true"] li &.active {
        opacity: 1;
    }
}

// the actions button is _next to_ the <a> tag that reacts to hover.
// We want the whole li to react to hover even when the action button is pressed.
// This avoids jitter if you move your mouse up and down between action buttons on each row.
// The row highlight won't flash on between the buttons.
li.has-actions:hover {
    border-radius: @baseBorderRadius;
    background-color: @ak-color-N40;
}

button.aui-nav-item.aui-button {
    .aui-sidebar[aria-expanded="false"] &,
    .aui-sidebar[aria-expanded="true"] & {
        height: auto;
        padding-right: @aui-nav-link-padding;
    }

    .aui-sidebar[aria-expanded="false"] & {
        width: auto;
    }

    .aui-sidebar[aria-expanded="false"] .aui-nav-selected & {
        background-color: @ak-color-N40;
    }

    .aui-sidebar[aria-expanded="true"] & {
        box-sizing: border-box;
        border: none;
        color: @ak-color-N500;
        padding-left: @aui-nav-link-padding;
        text-align: left;
        width: 100%;
    }

    .aui-sidebar &:focus {
        outline: 0;
        text-decoration: none;
    }
}

.aui-sidebar-group.section-overflow-items,
.aui-sidebar-group.add-shortcut-panel {
    margin-top: -@baseSpacing;
}

.aui-sidebar[aria-expanded="false"] .aui-sidebar-group.section-overflow-items {
    background: none;
    box-sizing: border-box;
    height: auto;
    line-height: 1;

    &:after {
        content: none;
    }

    &:before {
        color: @labelTextColor;
        content: "\f17f";
        font-family: "Atlassian Icons";
        font-size: @font-size-large;
    }

    &:hover {
        background-color: @ak-color-N40;
    }
}

.aui-message + .page-panel-content-header {
    margin-top: @baseSpacing;
}

.page-header-flex {
    .aui-page-header-inner {
        display: flex;
        justify-content: space-between;
    }

    .aui-page-header-main,
    .aui-page-header-actions {
        display: block; // @aui-override to remove `display: table-cell` and turn these into flex items
        min-width: 0; // flexbox defaults to the intrinsic width of the content, which overflows out of the container. This is the workaround to make it shrink and enable truncation to work
    }

    .aui-page-header-actions {
        padding-left: 0;
    }

    .page-header-actions-align-top {
        align-self: flex-start;
    }
}
