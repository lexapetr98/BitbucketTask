{namespace bitbucket.internal.layout}

/**
 * @param? activeHeaderNav
 * @param? appendNextUrlToLogin Should append the nextUrl to the login link
 * @param? headContent Content inserted inside HEAD after TITLE.
 * @param? hideLoginLink Boolean. Hides the "Login" link in global app header. Primarily used on the login page itself
 * @param? hideProfile Boolean. Hides the "User Profile" in global app header, including the Login link if not authenticated
 * @param? pageBottomContent Additional content at the bottom of the page, below the page footer.
 * @param? theme String. Theme class name added to the BODY. Default is 'bitbucket-theme'
 * @param? windowTitle Text for the TITLE element.
 *
 * data passed through to stash.layout.aui
 * @param? bodyClass String. Additional classes to be added to the BODY
 * @param content Main page content inserted inside the #content section
 * @param? dataAttributes Data attributes for main content section
 * @param? extraAttributes String or Object. Additional Extra attributes to apply to BODY
 * @param? focusedPageSize Default: xlarge. Options: small, medium, large, xlarge.
 * @param? pageType Default: default (full width). Options: default, focused, fixed, hybrid, sidebar, generic (no class applied).
 * @param? sidebarState String. 'collapsed', 'expanded' or left undefined. Used by AUI Sidebar to render the sidebar's initial state.
 * @param? useAdminContext Boolean. Loads resources for Admin page context (atl.admin instead of atl.general). Default false.
 */
{template .base}
    {webResourceManager_requireResourcesForContext('bitbucket.layout.base')}
    {call bitbucket.internal.layout.aui}
        {param bodyClass: $bodyClass /}
        {param content: $content /}
        {param dataAttributes: $dataAttributes /}
        {param extraAttributes: $extraAttributes /}
        {param focusedPageSize: $focusedPageSize /}
        {param pageType: $pageType /}
        {param sidebarState: $sidebarState /}
        {param theme: $theme ? $theme : 'bitbucket-theme' /}
        {param resourceContext: $useAdminContext ? 'atl.admin' : 'atl.general' /}
        {param windowTitle: $windowTitle ? $windowTitle + ' - ' + $ij.instanceName : $ij.instanceName /}
        {param headContent}
            <meta name="application-name" content="Bitbucket">
            <link rel="preload" href="{plugin_resource('com.atlassian.auiplugin:internal-iconfont-v2', 'fonts/adgs-icons.woff')}" as="font" type="font/woff" crossorigin="anonymous" />
            <link rel="shortcut icon" type="image/x-icon" href="{plugin_resource('com.atlassian.bitbucket.server.bitbucket-web:favicon', 'favicon.ico')}" />
            {if $headContent}
                {$headContent|noAutoescape}
            {/if}
            {foreach $webPanel in getWebPanels('bitbucket.head')}
                {$webPanel}
            {/foreach}
        {/param}
        {param globalPrimaryContent}
            {foreach $webPanel in getWebPanels('header.global.primary')}
                {$webPanel}
            {/foreach}
            <ul class="aui-nav">
                {foreach $headerItem in getWebItems('header.global.primary')}
                    {call bitbucket.internal.widget.headerDropdownWebItems data="$headerItem"}
                        {param isActive: $activeHeaderNav == $headerItem.moduleKey /}
                        {param dropdownWebSections: getWebSections($headerItem.moduleKey) /}
                    {/call}
                {/foreach}
            </ul>
        {/param}
        {param globalSecondaryContent}
            <ul class="aui-nav">
                {foreach $webPanel in getWebPanels('header.global.secondary.search')}
                    <li>{$webPanel}</li>
                {/foreach}
                {foreach $headerItem in getWebItems('header.global.secondary')}
                    {call bitbucket.internal.widget.headerDropdownWebItems data="$headerItem"}
                        {param isActive: $activeHeaderNav == $headerItem.moduleKey /}
                        {param dropdownWebSections: getWebSections($headerItem.moduleKey) /}
                        {param hideDropdownArrow: true /}
                    {/call}
                {/foreach}
                {if not $hideProfile}
                    {if $ij.principal}
                        <li class="user-dropdown">
                            {call aui.dropdown2.trigger}
                                {param menu: ['id' : 'user-dropdown-menu' ] /}
                                {param title: getText('bitbucket.web.header.user.description', $ij.principal.displayName, $ij.principal.name) /}
                                {param extraClasses: 'user-dropdown-trigger aui-dropdown2-trigger-arrowless' /}
                                {param content}
                                    {call aui.avatar.avatar}
                                        {param size: 'small' /}
                                        {param avatarImageUrl: avatarUrl($ij.principal, 'small') /}
                                        {param id: 'current-user' /}
                                        {param extraAttributes: [
                                            'data-username': $ij.principal.name,
                                            'data-avatarurl-small': avatarUrl($ij.principal, 'small'),
                                            'data-emailaddress': $ij.principal.emailAddress
                                            ] /}
                                        {{param accessibilityText: getText('bitbucket.web.header.user.description', $ij.principal.displayName, $ij.principal.name) /}}
                                    {/call}
                                {/param}
                                {param container: '.aui-header-secondary' /}
                            {/call}
                            {call aui.dropdown2.contents}
                                {param id: 'user-dropdown-menu' /}
                                {param extraClasses: 'aui-style-default' /}
                                {param content}
                                    {call bitbucket.internal.widget.headerDropdownWebSections}
                                        {param dropdownWebSections: getWebSections('header.global.secondary.user') /}
                                    {/call}
                                {/param}
                            {/call}
                        </li>
                    {elseif not $hideLoginLink}
                        <li class="user-dropdown">
                            <a id="login-link" href="{nav_login($appendNextUrlToLogin != false)}">{getText('bitbucket.web.menu.login')}</a>
                        </li>
                    {/if}
                {/if}
            </ul>
        {/param}
        {param footerContent}
            {foreach $webPanel in getWebPanels('bitbucket.web.footer')}
                {$webPanel}
            {/foreach}
        {/param}
        {param pageBottomContent}
            <script>
            require('bitbucket/internal/layout/base/base').onReady(
                {if $ij.principal}
                    {lb}
                        id : {$ij.principal.id|escapeJs},
                        active: {$ij.principal.active|escapeJs},
                        name : "{$ij.principal.name|escapeJs}",
                        slug : "{$ij.principal.slug|escapeJs}",
                        displayName : "{$ij.principal.displayName|escapeJs}",
                        avatarUrl : "{avatarUrl($ij.principal, 'small')|escapeJs}",
                        emailAddress : "{$ij.principal.emailAddress|escapeJs}",
                        type : "{$ij.principal.type|escapeJs}"
                    {rb}
                {else}
                    null
                {/if},
                "{$ij.instanceName|escapeJs}"
            );

            require('bitbucket/internal/widget/keyboard-shortcuts/keyboard-shortcuts').onReady();
            </script>
            {if $pageBottomContent}
                {$pageBottomContent|noAutoescape}
            {/if}
            {foreach $webPanel in getWebPanels('bitbucket.web.pageBottom')}
                {$webPanel}
            {/foreach}
        {/param}
    {/call}
{/template}
