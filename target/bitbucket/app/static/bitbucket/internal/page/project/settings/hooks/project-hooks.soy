{namespace bitbucket.internal.page.project.settings}

/**
* @param project
* @param preReceiveHookPage
* @param postReceiveHookPage
* @param scope
*/
{template .hooks}
    {webResourceManager_requireResourcesForContext('bitbucket.page.settings.hooks')}
    {let $containerId: 'hooks-container' /}
    {call bitbucket.internal.layout.projectSettings}
        {{param windowTitle: getText('bitbucket.web.project.settings.tab.hooks.window.title', $project.name) /}}
        {param project: $project /}
        {param activeNav: 'project-settings-hooks' /}
        {param content}
            {call aui.page.pageHeader}
                {param content}
                    {call aui.page.pageHeaderMain}
                        {param content}
                            <h2>{getText('bitbucket.web.hooks.title')}</h2>
                        {/param}
                    {/call}
                    {call aui.page.pageHeaderActions}
                        {param content}
                            {call aui.buttons.button}
                                {param text: getText('bitbucket.web.hooks.add')/}
                                {param href: nav_addon_marketplace('Repository hooks')/}
                                {param extraAttributes: ['target': '_blank'] /}
                            {/call}
                        {/param}
                    {/call}
                {/param}
            {/call}
            <p>{getTextAsHtml('bitbucket.web.hooks.description.project.html', productName(), bitbucket_help_url('bitbucket.help.repository.settings.hooks.guide'))}</p>
            <div id="{$containerId}"></div>
        {/param}
        {param pageBottomContent}
            <script>require('bitbucket/internal/page/settings/hooks/hooks-page').onReady(
                document.getElementById('{$containerId}'),
                {to_json($scope)|noAutoescape},
                {lb}
                    PRE_RECEIVE: {to_json($preReceiveHookPage)|noAutoescape},
                    POST_RECEIVE: {to_json($postReceiveHookPage)|noAutoescape},
                {rb});
            </script>
        {/param}
    {/call}
{/template}
