define("bitbucket/internal/page/project/overview/project-overview","exports react react-dom react-redux bitbucket/util/navbuilder bitbucket/internal/bbui/aui-react/avatar bitbucket/internal/enums bitbucket/internal/feature/repository/filterable-repository-table/actions bitbucket/internal/feature/repository/filterable-repository-table/filterable-repository-table bitbucket/internal/util/analytics bitbucket/internal/util/notifications/notifications bitbucket/internal/widget/filterable-entity-table/entity-rest-actor bitbucket/internal/widget/filterable-entity-table/filterable-entity-table bitbucket/internal/widget/filterable-entity-table/store".split(" "),
function(f,p,q,r,t,g,u,v,w,x,y,h,z,A){Object.defineProperty(f,"__esModule",{value:!0});f.init=function(b,a){a=a.repositoryPage;B.default.showFlashes();k(document.querySelector(".create-repository-link.repository-list-link"));k(document.querySelector(".project-welcome-mat.create-repository-mat"),!0);if(!a||a.size||!a.isLastPage){var c=u.EntityGroups.REPOSITORIES,d=v.LOAD_REPOSITORIES;a=(0,C.default)({actors:[(0,h.loadEntitiesRestActor)({loadAction:d,urlBuilder:D,fallbackBuilder:l,responseTransformer:(0,
h.searchResponseTransformer)(c)})],entityName:c,loadAction:d});c=(0,z.connectEntityTable)(c,d,E.default);F.default.render(m.default.createElement(r.Provider,{store:a},m.default.createElement(c,{bufferPx:document.getElementById("footer").getBoundingClientRect().height,filterable:!0,onRepoClick:function(a,b,c){e.default.add("project-repository-list.item.clicked",{"filter.length":b.length,"project.id":a.project.id,"repository.id":a.id,"result.index":c.indexOf(a),"results.size":c.length})}})),b)}};var m=
babelHelpers.interopRequireDefault(p),F=babelHelpers.interopRequireDefault(q),n=babelHelpers.interopRequireDefault(t),E=babelHelpers.interopRequireDefault(w),e=babelHelpers.interopRequireDefault(x),B=babelHelpers.interopRequireDefault(y),C=babelHelpers.interopRequireDefault(A),D=function(b){return(b=b.filter)?n.default.rest("search").currentProject().allRepos().withParams({filter:b,avatarSize:g.AvatarSize.SMALL}):l()},l=function(){return n.default.rest().currentProject().allRepos().withParams({avatarSize:g.AvatarSize.SMALL})},
k=function(b,a){return b&&b.addEventListener("click",function(){e.default.add("project-repository-list.create.clicked",{"is.empty.state":!!a});e.default.add("repository-list.create.clicked")})}});