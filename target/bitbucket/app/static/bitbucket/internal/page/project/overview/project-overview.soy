{namespace bitbucket.internal.project}

/**
* @param project
* @param dataAttributes
* @param repositoryPage
*/
{template .projectOverview}
{webResourceManager_requireResourcesForContext('bitbucket.page.project.overview')}
{let $hasRepos: $repositoryPage and $repositoryPage.size > 0 /}
{let $containerId: 'repositories-container' /}
{call bitbucket.internal.layout.project}
    {{param windowTitle: getText('bitbucket.web.project.overview.window.title', $project.name) /}}
    {param activeNav: 'projects-repositories-tab' /}
    {param project: $project /}
    {param dataAttributes: $dataAttributes /}
    {param pageType: 'sidebar' /}
    {param panelContentHeader: $hasRepos ? getText('bitbucket.web.project.tabs.repositories') : null /}
    {param panelContentHeaderActions}
        {foreach $webItem in getWebItems('bitbucket.web.project.repositories.header.actions', ['project': $project])}
            {call bitbucket.internal.widget.webItemButton data="$webItem" /}
        {/foreach}
    {/param}
    {param content}
        {call widget.aui.group.group}
            {param extraClasses: 'project-banners' /}
            {param content}
                {foreach $webPanel in getWebPanels('bitbucket.web.project.overview.banner',
                [ 'repositoryPage' : $repositoryPage, 'project' : $project ])}
                    {call widget.aui.group.item}
                        {param content}
                            {$webPanel}
                        {/param}
                    {/call}
                {/foreach}
            {/param}
        {/call}
        <div id='{$containerId}'></div>
    {/param}
    {param pageBottomContent}
        <script>
            require('bitbucket/internal/page/project/overview/project-overview').init(
                document.getElementById('{$containerId}'),
                {lb}
                    {if $repositoryPage}
                        repositoryPage: {to_json($repositoryPage, [ 'avatarSize': avatarSize('small') ])|noAutoescape},
                    {/if}
                {rb}
            );
        </script>
    {/param}
{/call}
{/template}
