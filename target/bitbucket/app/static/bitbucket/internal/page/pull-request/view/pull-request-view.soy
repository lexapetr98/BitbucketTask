{namespace bitbucket.internal.page.pullRequest}

/**
 * @param? commit
 * @param repository
 * @param pullRequest
 * @param? startingTabKey
 * @param? maxChanges
 * @param? mergeTimeout
 * @param? relevantContextLines
 * @param unwatched
 * @param canDelete
 * @param hasRepoWrite
 * @param hasSourceRepoWrite
 * @param hasSourceRepoRead
 * @param? dataAttributes
 * @param? seenNeedsWork
 * @param? seenCommitReview
 * @param? sinceCommitId
 */
{template .view}
{webResourceManager_requireResourcesForContext('bitbucket.page.pullRequest.view')}
{webResourceManager_requireResourcesForContext('bitbucket.feature.files.fileHandlers')}
    {call bitbucket.internal.layout.pullRequest}
        {param commit: $commit /}
        {param repository: $repository /}
        {param pullRequest: $pullRequest /}
        {param canDelete: $canDelete/}
        {param hasRepoWrite: $hasRepoWrite /}
        {param hasSourceRepoWrite: $hasSourceRepoWrite /}
        {param hasSourceRepoRead: $hasSourceRepoRead /}
        {param dataAttributes: $dataAttributes /}
        {param activeTab: $startingTabKey ? $startingTabKey : 'bitbucket.pull-request.nav.overview' /}
        {param content}/* loaded client-side */{/param}
        {param maxChanges: $maxChanges /}
        {param mergeTimeout: $mergeTimeout /}
        {param relevantContextLines: $relevantContextLines /}
        {param seenNeedsWork: $seenNeedsWork /}
        {param seenCommitReview: $seenCommitReview /}
        {param sinceCommitId: $sinceCommitId /}
        {param pageBottomContent}
            <script>
                require('bitbucket/internal/page/pull-request/view/pull-request-view').onReady({if $unwatched}{$unwatched}{else}false{/if});
            </script>
        {/param}
    {/call}
{/template}
