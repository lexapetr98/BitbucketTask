{namespace bitbucket.internal.users.profile}

/**
 * Used when showing the profile of some user other than the currently logged in one
 * @param user
 * @param project $user's personal project
 * @param repositoryPage page of the $user's personal repos
 */
{template .othersProfile}
{webResourceManager_requireResourcesForContext('bitbucket.page.user.profile.others')}
{webResourceManager_requireResourcesForContext('bitbucket.page.user.profile')}
{let $containerId: 'repositories-container' /}
{let $featureEnabled: isFeatureEnabled('personal.repos') /}
{let $noRepos: $repositoryPage and $repositoryPage.size == 0 and $repositoryPage.isLastPage /}
{call bitbucket.internal.layout.users.profile}
    {{param windowTitle: getText('bitbucket.web.user.profile.others.window.title', $user.displayName) /}}
    {param activeNav: 'userprofile-repositories-tab' /}
    {param user: $user /}
    {param project: $project /}
    {param content}
        {if $featureEnabled}
            {if $noRepos}
                {call .noRepositories}
                    {param userDisplayName: $user.displayName/}
                {/call}
            {else}
                <div id='{$containerId}'></div>
            {/if}
        {else}
            {call .personalRepositoryDisabled /}
        {/if}
    {/param}
    {param pageBottomContent}
        <script>
            {if $featureEnabled}
                require('bitbucket/internal/page/users/profile/profile').init(
                    document.getElementById('{$containerId}'),
                    {lb}
                        {if $repositoryPage}
                            repositoryPage: {to_json($repositoryPage, [ 'avatarSize': avatarSize('small') ])|noAutoescape},
                        {/if}
                    {rb}
                );
            {/if}
        </script>
    {/param}
{/call}
{/template}

/**
 * Used when showing a user their own profile. For the moment it retains the edit buttons shown in the user edit screen.
 * @param user
 * @param project $user's personal project
 * @param repositoryPage page of the $user's personal repos
 */
{template .ownProfile}
{webResourceManager_requireResourcesForContext('bitbucket.page.user.profile.self')}
{webResourceManager_requireResourcesForContext('bitbucket.page.user.profile')}
{let $containerId: 'repositories-container' /}
{let $featureEnabled: isFeatureEnabled('personal.repos') /}
{let $noRepos: $repositoryPage and $repositoryPage.size == 0 and $repositoryPage.isLastPage /}
{call bitbucket.internal.layout.users.profile}
    {param windowTitle: getText('bitbucket.web.user.profile.own.window.title') /}
    {param activeNav: 'userprofile-repositories-tab' /}
    {param user: $user /}
    {param project: $project /}
    {param content}
        {if $featureEnabled}
            {if $noRepos}
                {call .noRepositoriesSelf}
                    {param projectKey: $project.key/}
                {/call}
            {else}
                <div id='{$containerId}'></div>
            {/if}
        {else}
            {call .personalRepositoryDisabled /}
        {/if}
    {/param}
    {param pageBottomContent}
        <script>
            {if $featureEnabled}
                require('bitbucket/internal/page/users/profile/profile').init(
                    document.getElementById('{$containerId}'),
                    {lb}
                        {if $repositoryPage}
                            repositoryPage: {to_json($repositoryPage, [ 'avatarSize': avatarSize('small') ])|noAutoescape},
                        {/if}
                    {rb}
                );
            {/if}
        </script>
    {/param}
{/call}
{/template}

/**
 * Used when showing the profile of a service user
 * @param user
 */
{template .serviceUserProfile}
{webResourceManager_requireResourcesForContext('bitbucket.page.user.profile')}
{call bitbucket.internal.layout.users.profile}
    {{param windowTitle: getText('bitbucket.web.user.profile.others.window.title', $user.displayName) /}}
    {param activeNav: 'userprofile-repositories-tab' /}
    {param user: $user /}
    {param content}
    {/param}
{/call}
{/template}

/**
 * @param projectKey
 */
{template .noRepositoriesSelf}
    {call bitbucket.internal.widget.welcomeMat}
        {param title: getText('bitbucket.web.user.profile.no.repositories.self.heading') /}
        {param extraClasses: 'no-results repository-list' /}
        {param content}
            {{getText('bitbucket.web.user.profile.no.repositories.self.description', '<p>', '</p>', productName())|noAutoescape}}

            {call bitbucket.internal.buttons.button}
                {param isPrimary: true /}
                {param buttonText: getText('bitbucket.web.user.profile.create.first.repository.button.text') /}
                {param href: nav_repo_create($projectKey) /}
                {param extraClasses: 'create-repository-button' /}
            {/call}
        {/param}
    {/call}
{/template}

/**
 * @param userDisplayName
 */
{template .noRepositories}
    {call bitbucket.internal.widget.welcomeMat}
        {{param title: getText('bitbucket.web.user.profile.no.repositories.heading') /}}
        {param extraClasses: 'no-results repository-list' /}
        {param backgroundClass: 'private-repository' /}
        {param content}
            <p>
            {{getText('bitbucket.web.user.profile.no.repositories.description', $userDisplayName)}}
            </p>
        {/param}
    {/call}
{/template}

/**
 * No parameters
 */
{template .personalRepositoryDisabled}
    {call bitbucket.internal.widget.welcomeMat}
        {{param title: getText('bitbucket.web.user.profile.no.repositories.heading') /}}
        {param extraClasses: 'no-results repository-list' /}
        {param backgroundClass: 'private-repository' /}
        {param content}
            <p>
            {{getText('bitbucket.web.user.profile.personal.repository.disabled.description')}}
            </p>
        {/param}
    {/call}
{/template}

/**
 * Used by the com.atlassian.bitbucket.server.bitbucket-web:userprofile-manage-account-button web panel
 */
{template .manageAccountButton}
    {call bitbucket.internal.buttons.button}
        {param buttonText: getText('bitbucket.web.user.profile.manage.account.button.text') /}
        {param href: nav_account() /}
        {param title: getText('bitbucket.web.user.profile.manage.account.button.title') /}
    {/call}
{/template}

/**
 * Used by the com.atlassian.bitbucket.server.bitbucket-web:userprofile-create-repository-button web panel
 *
 * @param project
 */
{template .createRepositoryButton}
    {call bitbucket.internal.buttons.button}
        {param buttonText: getText('bitbucket.web.user.profile.create.repository.button.text') /}
        {param href: nav_repo_create($project) /}
        {param title: getText('bitbucket.web.user.profile.create.repository.button.title') /}
        {param extraClasses: 'create-repository-button' /}
    {/call}
{/template}

