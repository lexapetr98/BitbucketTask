define("bitbucket/internal/page/users/profile/profile","exports react react-dom react-redux bitbucket/util/navbuilder bitbucket/util/server bitbucket/internal/bbui/aui-react/avatar bitbucket/internal/enums bitbucket/internal/feature/repository/filterable-repository-table/action-creators bitbucket/internal/feature/repository/filterable-repository-table/actions bitbucket/internal/feature/repository/filterable-repository-table/filterable-repository-table bitbucket/internal/util/analytics bitbucket/internal/util/notifications/notifications bitbucket/internal/widget/filterable-entity-table/entity-rest-actor bitbucket/internal/widget/filterable-entity-table/filterable-entity-table bitbucket/internal/widget/filterable-entity-table/store".split(" "),
function(b,k,l,m,n,p,q,r,t,u,v,w,x,y,z,A){Object.defineProperty(b,"__esModule",{value:!0});b.init=function(c,a){a=a.repositoryPage;B.default.showFlashes();f(document.querySelector(".aui-page-header-actions .create-repository-button"));f(document.querySelector(".welcome-mat .create-repository-button"),!0);if(!a||a.size||!a.isLastPage){var d=r.EntityGroups.REPOSITORIES,e=u.LOAD_REPOSITORIES,b=(0,C.default)({actors:[(0,y.loadEntitiesRestActor)({loadAction:e,urlBuilder:D,statusCode:{401:p.createEmptyPage}})],
entityName:d,loadAction:e});d=(0,z.connectEntityTable)(d,e,E.default);a&&b.dispatch((0,t.populateRepositories)(a));F.default.render(g.default.createElement(m.Provider,{store:b},g.default.createElement(d,{bufferPx:document.getElementById("footer").getBoundingClientRect().height,onRepoClick:function(a,b,c){h.default.add("profile-repository-list.item.clicked",{"filter.length":b.length,"project.id":a.project.id,"repository.id":a.id,"result.index":c.indexOf(a),"results.size":c.length})}})),c)}};var g=
babelHelpers.interopRequireDefault(k),F=babelHelpers.interopRequireDefault(l),G=babelHelpers.interopRequireDefault(n),E=babelHelpers.interopRequireDefault(v),h=babelHelpers.interopRequireDefault(w),B=babelHelpers.interopRequireDefault(x),C=babelHelpers.interopRequireDefault(A),D=function(){return G.default.rest().currentProject().allRepos().withParams({avatarSize:q.AvatarSize.SMALL})},f=function(b,a){return b&&b.addEventListener("click",function(){h.default.add("profile-repository-list.create.clicked",
{"is.empty.state":!!a})})}});