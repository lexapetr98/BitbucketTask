define("bitbucket/internal/page/branches/branches","module exports @atlassian/aui jquery lodash bitbucket/util/navbuilder bitbucket/internal/feature/repository/branch-table/branch-table bitbucket/internal/model/revision-reference bitbucket/internal/page/branches/branches-page-analytics bitbucket/internal/util/ajax bitbucket/internal/util/events bitbucket/internal/util/history bitbucket/internal/widget/error-dialog/error-dialog".split(" "),function(p,g,q,r,t,u,v,w,x,y,z,A,B){function C(b){b=b.errors;
b=new D.default({panelContent:bitbucket.internal.widget.paragraph({text:(0,t.get)(b,"0.message",h.default.I18n.getText("bitbucket.web.unknownerror"))}),titleText:h.default.I18n.getText("bitbucket.web.branch.list.notfound")});k&&(b.dialogOptions.okButtonText=h.default.I18n.getText("bitbucket.web.branch.list.back"));b.addOkListener(function(){if(k){window.location=l();var a=void 0}else a=m.default.back();return a});b.show();return n.default.Deferred()}function E(b){c.default.on("bitbucket.internal.page.branches.revisionRefRemoved",
function(a){b.isCurrentBase(a)?window.location=l():b.remove(a)});c.default.on("bitbucket.internal.layout.branch.revisionRefChanged",function(a){a=a.toJSON();a.id!==d.id&&m.default.pushState({baseRef:a,isInitial:!1},null,l(a))});c.default.on("bitbucket.internal.history.changestate",function(a){a=a.state;d=a.baseRef;k=a.isInitial;b.update(d);c.default.trigger("bitbucket.internal.page.branches.revisionRefChanged",null,new F.default(d))})}function G(b){b.initShortcuts();c.default.on("bitbucket.internal.widget.keyboard-shortcuts.register-contexts",
function(a){return a.enableContext("branch-list")})}Object.defineProperty(g,"__esModule",{value:!0});var h=babelHelpers.interopRequireDefault(q),n=babelHelpers.interopRequireDefault(r),H=babelHelpers.interopRequireDefault(u),I=babelHelpers.interopRequireDefault(v),F=babelHelpers.interopRequireDefault(w),J=babelHelpers.interopRequireDefault(x),K=babelHelpers.interopRequireDefault(y),c=babelHelpers.interopRequireDefault(z),m=babelHelpers.interopRequireDefault(A),D=babelHelpers.interopRequireDefault(B),
k=void 0,e=void 0,d=void 0,l=function(b){return H.default.currentRepo().branches(b).build()};g.default={onReady:function(b,a,c,f){d=f;m.default.initialState({baseRef:f,isInitial:!0});(0,n.default)(b).append(bitbucket.internal.feature.repository.branchTable({repository:c,baseRef:f,id:a,filterable:!1}));e=new I.default({target:"#branch-list",filter:'input[data-for\x3d"branch-list"]',statusCode:K.default.ignore404WithinRepository(C)},f);e.init().then(J.default.bindAnalyticsEvents);E(e);G(e)}};p.exports=
g["default"]});