define("bitbucket/internal/widget/client-file-handlers/client-file-uploader","module exports jquery lodash bitbucket/internal/util/ajax bitbucket/internal/util/feature-detect bitbucket/internal/widget/client-file-handlers/client-file-handler".split(" "),function(l,h,k,m,n,p,q){function a(d){if(!a.isSupported())throw Error("ClientFileUploader requires FormData support");this.init.apply(this,arguments)}Object.defineProperty(h,"__esModule",{value:!0});var f=babelHelpers.interopRequireDefault(k),d=babelHelpers.interopRequireDefault(m),
r=babelHelpers.interopRequireDefault(n);k=babelHelpers.interopRequireDefault(p);var c=babelHelpers.interopRequireDefault(q);a.isSupported=k.default.formData;a.typeFilters=c.default.typeFilters;f.default.extend(a.prototype,c.default.prototype);a.prototype.defaults=f.default.extend({},c.default.prototype.defaults,{url:void 0,fieldName:"file",fileSizeLimit:void 0});a.prototype.init=function(a){d.default.bindAll(this,"uploadFiles");c.default.prototype.init.call(this,a);this.uploads=[];this.on("validFiles",
this.uploadFiles)};a.prototype.uploadFiles=function(a){var b=this;d.default.forEach(a,function(a){var c=new FormData,e=f.default.Deferred();c.append(b.options.fieldName,a,a.name);var g=r.default.ajax({url:d.default.isFunction(b.options.url)?b.options.url():b.options.url,type:"POST",data:c,timeout:b.options.timeout,xhr:function(){var a=f.default.ajaxSettings.xhr();(a.upload?a.upload:a).addEventListener("progress",function(a){a.lengthComputable&&e.notify(Math.max(0,Math.min(100,100*a.loaded/a.total)))});
return a},statusCode:{500:!1},processData:!1,contentType:!1}).done(function(){e.notify(100);e.resolveWith(this,arguments)}).fail(function(){e.rejectWith(this,arguments)}).always(function(){b.uploads=d.default.without(b.uploads,g)});e.promise(g);b.uploads.push(g);b.trigger("uploadStarted",g,a)})};a.prototype.destroy=function(){d.default.invokeMap(this.uploads,"abort");this.uploads=[]};h.default=a;l.exports=h["default"]});